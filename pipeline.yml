resources:
- name: project-code
  type: git
  source:
    uri: https://github.com/Sathyan727/concourse-demo-job.git
    branch: main
 
jobs:
- name: build-ami
  plan:
  - get: project-code
    trigger: true
  - task: validate--build-packer
    vars:
      ssh-private-key: ((ssh-private-key))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hashicorp/packer
          tag: latest
      inputs:
      - name: project-code
      run:
        path: sh
        args:
        - -c
        - |
          apk add --no-cache python3 py3-pip
          pip3 install --no-cache-dir ansible
          export PATH="$PATH:/root/.local/bin"
          ansible-playbook --version || { echo "Ansible installation failed"; exit 1; }
          packer plugins install github.com/hashicorp/amazon
          packer plugins install github.com/hashicorp/ansible
          packer validate -var "ssh-private-key=$SSH_PRIVATE_KEY" project-code/packer/template.json
          packer build -var "ssh-private-key=$SSH_PRIVATE_KEY" project-code/packer/template.json
- name: provision-infra
  plan:
  - get: project-code
    passed: [build-ami]
  - task: terraform-init
    vars:
      ssh-private-key: ((ssh-private-key))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hashicorp/terraform
          tag: latest
      inputs:
      - name: project-code
      run:
        path: sh
        args:
        - -exc
        - |
          cd project-code/terraform
          terraform init
  - task: terraform-apply
    vars:
      ssh-private-key: ((ssh-private-key))  
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hashicorp/terraform
          tag: latest
      inputs:
      - name: project-code
      params:
        TF_VAR_ami_id: ((ami_id))
      run:
        path: sh
        args:
        - -exc
        - |
          cd project-code/terraform
          terraform apply -auto-approve
params:
  SSH_PRIVATE_KEY: ((ssh-private-key))
 
